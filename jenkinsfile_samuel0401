pipeline {
    // def mavenHome : tool name = 'maven 3.9.6'
    agent any
    // options{}
    // triggers{}
    tools{
        maven 'maven 3.9.6'
    }
    stages{
        stage('1.CloningCode'){
            steps{
                sh "echo cloning the latest app version"
                git 'https://github.com/s-oluwade/maven-web-application.git'
            }
            // git "https://github.com/s-oluwade/maven-web-application.git"
            // git credentialsId: 'tesla-credentials', url: 'https://github.com/s-oluwade/maven-web-application.git'
        }
        stage('2.Build'){
            steps{
                sh "echo validate, compile and perform UnitTesting"
                sh "echo UnitTesting must passed for artifacts to be created"
                sh "mvn clean package"
            }
        }
        stage('3.CodeQuality'){
            steps{
                sh "mvn sonar:sonar"
                sh "echo CodeQualityAnalysis completed"
            }
        }
        stage('4.UploadArtifacts'){
            steps{
                sh "mvn deploy"
                sh "echo artifacts uploaded successfully"
            }
        }
        stage('5.Deploy2UAT'){
            steps{
                sh "echo deploying to container: tomcat"
                deploy adapters: [tomcat9(credentialsId: 'tomcat-credentials', path: '', url: 'http://172.31.95.240:8088/')], contextPath: null, war: 'target/*war'
            }
        }
        stage('6.ManualApproval'){
            steps{
                sh "echo Please review and confirm within 5 days"
                timeout(time:5, unit:'DAYS'){
                    input message: 'Application ready for deployment, Please review and approve'
                }
            }
        }
        stage('7.Deploy2Prod'){
            steps{
                sh "echo Deploy2Prod step not implemented"
            }
        }
    }
    post{
        always{
            emailext body: '''Hi Team,

            This is the status of the build.
            
            Samuel,
            Landmark Technologies.
            ''', 
            recipientProviders: [developers(), buildUser(), contributor()], subject: 'Build Status For Tesla App', to: 'bamiwade@gmail.com'
        }
        success{
            emailext body: '''Hi Team,

            Build succeeded.
            
            Samuel,
            Landmark Technologies.
            ''', 
            recipientProviders: [developers(), buildUser(), contributor()], subject: 'Build Status For Tesla App', to: 'bamiwade@gmail.com'
        }
        failure{
            emailext body: '''Hi Team,

            Build failed.
            
            Samuel,
            Landmark Technologies.
            ''', 
            recipientProviders: [developers(), buildUser(), contributor()], subject: 'Build Status For Tesla App', to: 'bamiwade@gmail.com'
        }
    }
}
